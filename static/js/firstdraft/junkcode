;
 user_id | first_name  | last_name |               email               |  password  | credit_score 
---------+-------------+-----------+-----------------------------------+------------+--------------
       1 | Ruben       | Spears    | adamslori@gmail.com               | 2(x24HLl5p |          777
       2 | Denise      | Vargas    | armstrongkaren@clark-davis.info   | pUI3YieXO% |          609
       3 | Ashley      | Brown     | gibsonderek@gmail.com             | _0ijEaKrvH |          588
       4 | Willie      | Cruz      | kimberlybrown@hotmail.com         | %m27sZYgLM |          595
       5 | Brandon     | Griffin   | florescindy@hotmail.com           | 7cR1XQ*h@) |          775
       6 | Christopher | Thomas    | williamscynthia@acosta-brock.info | F@d3O4iteT |          745
       7 | Eric        | Gomez     | jbridges@yahoo.com                | yrv%Y5Ta$) |          628
       8 | Heather     | Guerrero  | kfranklin@hotmail.com             | JC1NtQh_I$ |          619
       9 | John        | Boyd      | keithgates@hotmail.com            | OA76o4Qr(m |          739
      10 | Randy       | Barnes    | edwardssarah@gmail.com            | _v6QirY&m( |          719
      11 | Duck        | Duckerson | duck@duck.duck                    | duck       |             
      12 | Test        | Testerson | test@test.test                    | test       |             
      13 | Kitty       | McKitty   | kit@kit.kit                       | kit        |             
(13 rows)



cc_account_id |        cc_account_name         |     date_opened     | credit_card_id | user_id 
---------------+--------------------------------+---------------------+----------------+---------
             8 | Sapphire Preferred             | 1984-10-12 00:00:00 |              1 |       8
             5 | Sapphire Preferred             | 1980-04-03 00:00:00 |              1 |       5
             9 | Sapphire Reserve               | 2010-08-18 00:00:00 |              2 |       9
            10 | Sapphire Reserve               | 1981-07-11 00:00:00 |              2 |      10
             2 | The Platinum Card              | 1973-11-27 00:00:00 |              3 |       2
             3 | The Platinum Card              | 2007-07-06 00:00:00 |              3 |       3
             4 | The Platinum Card              | 2013-01-01 00:00:00 |              3 |       4
             7 | British Airways Visa Signature | 1977-07-24 00:00:00 |              5 |       7
             1 | Marriott Bonvoy Brilliant      | 1975-02-26 00:00:00 |              6 |       1
             6 | Sapphire Reserve               | 1983-11-22 00:00:00 |              2 |       6




             	// showAcctForm() {
	// 	const allCCs = []
		
	// 	for (let i = 0; i < this.state.ccAcctInfo.length; i++) {
	// 		let cardInfo = this.state.ccInfo[i]
	// 		let acctInfo = this.state.ccAcctInfo[i]
	// 		allCCs.push(
	// 			<div>
	// 				<CCInfo
	// 					imagePath={cardInfo.cc_img}
	// 					name={cardInfo.cc_name}
	// 					bankId={cardInfo.bank_id}
	// 					loyalty={cardInfo.loyalty_program_id}
	// 					spendTimeframe={cardInfo.spend_timeframe}
	// 				/>
				
	// 			<SpendingForm 
	// 				approvalDate={acctInfo.approval_date}
	// 			/>  
				
	// 			</div>
	// 		)
	// 	}
	// 	return allCCs
	// }


      {/* Router should have all of the links, homepage component, user clicks sign up, link is a Router link. Everywhere else in code, Router links.  */}


      class Dashboard extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			isLoggedIn: sessionStorage.getItem('userId'),
			name: '',
		}
		this.updateDashState = this.updateDashState.bind(this);
	}

	componentDidMount() {
		this.setState({name: sessionStorage.getItem('name')});
		this.setState({showDash: true})
		console.log(this.state)
	}

	updateDashState(event) {
		event.preventDefault();
		this.setState({showDash: false});
		return <CCAccount/>
	}

	render() {
		
		const userId = this.state.isLoggedIn;
		const showDash = this.state.showDash;
		sessionStorage.setItem('userId', userId);
		if (userId && showDash) {
			return (
				<div>
					<NavBar />
					<p id="headline">Welcome, {this.state.name}!</p>
					<div className="card-deck">
					<div className="card card-heading">
						<img src="https://cdn.pixabay.com/photo/2015/08/26/14/30/wallet-908569_960_720.jpg" className="card-img-top" />
						<div className="card-body">
							<h5 className="card-title">My Credit Cards</h5>
							<p className="dash-text">See a list of your credit cards and calculate time left in your promotional spending period. </p>
							<a href="/mycards" className="btn btn-primary" id="dash-button" onClick={this.updateDashState}>Show Cards</a>
						</div>
					</div>

					<div className="card card-heading">
						<img src="https://cdn.pixabay.com/photo/2017/08/02/11/09/electronic-payments-2570939_960_720.jpg" className="card-img-top" />
						<div className="card-body">
							<h5 className="card-title">Add a New Card</h5>
							<p className="dash-text">Add your newest accounts here and begin tracking your progress towards that travelpoints windfall.</p>
							<a href="/add-new" className="btn btn-primary" id="dash-button" onClick={this.updateDashState}>Add Card</a>
						</div>
					</div>

					<div className="card card-heading">
						<img src="https://cdn.pixabay.com/photo/2017/09/10/14/26/shopping-2735735_960_720.jpg" className="card-img-top" alt="..." />
						<div className="card-body">
							<h5 className="card-title">My Profile</h5>
							<p className="dash-text">View your profile, verify account information and make changes to your password.</p>
							<a href="/myprofile" className="btn btn-primary" id="dash-button" onClick={this.updateDashState} >See Profile</a>
						</div>
					</div>
					</div>
				</div>
			)
		}
	}



at ln 548

render() {
				return (
				<div>
						{/* <div className="card-deck"> */}
						
							{this.showCardInfo()}
							{/* {this.showLoyaltyPortal()} */}

					</div>	
				</div>
			)}
	}